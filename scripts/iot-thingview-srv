#!/usr/bin/env python3

import gunicorn
from gunicorn.app.base import BaseApplication
from gunicorn.six import iteritems
from thingview import app

# define "server" HTTP header
gunicorn.SERVER_SOFTWARE = 'ThingView IoT hub'


class StandaloneApplication(BaseApplication):
    def __init__(self, application, options=None):
        self.options = options or {}
        self.application = application
        super(StandaloneApplication, self).__init__()

    def load_config(self):
        config = dict([(key, value) for key, value in iteritems(self.options)
                       if key in self.cfg.settings and value is not None])
        for key, value in iteritems(config):
            self.cfg.set(key.lower(), value)

    def load(self):
        return self.application


if __name__ == '__main__':
    options = {
        'certfile': '/etc/iot.things.srv/ssl.cert',
        'keyfile': '/etc/iot.things.srv/ssl.key',
        'bind': '0.0.0.0:8080',
        'workers': 4,
    }
    StandaloneApplication(app, options).run()
