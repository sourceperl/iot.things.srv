#!/usr/bin/env python3

import argparse
from datetime import datetime
from pymongo import MongoClient
import pytz

# some const
LOCAL_TZ = pytz.timezone('Europe/Paris')

# some vars
db = MongoClient().iot

# parse argument
parser = argparse.ArgumentParser(description='HTTP API server')
parser.add_argument('device', type=str,
                    help='device to check')
parser.add_argument('-n', '--number', type=int, default=5,
                    help='number of record (default is 5)')
args = parser.parse_args()

# build query
d_query = dict()
d_query['device'] = args.device.upper()
_record = None

# list and print all record(s)
for record in db.tx_pulse_raw.find({'$query': d_query, '$orderby': {'time': -1}}).limit(args.number):
    # first loop init
    if not _record:
        _record = record
    # items init
    utc_dt = datetime.fromtimestamp(record['time'], tz=pytz.utc)
    p1 = record['pulse_1']
    p2 = record['pulse_2']
    dp1 = record['pulse_1'] - _record['pulse_1']
    dp2 = record['pulse_2'] - _record['pulse_2']
    # print current record
    print('%s   Vm = %10i (inc %6i)   Vb = %10s (inc %6i)' % (utc_dt.astimezone(LOCAL_TZ), p1, dp1, p2, dp2))
    # for next loop
    _record = record
